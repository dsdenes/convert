/*
 * Converted from api.yaml with typeconv
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetConversationMessagesResponse struct for GetConversationMessagesResponse
type GetConversationMessagesResponse struct {
	Data []SMSConversationMessage `json:"data"`
}

// NewGetConversationMessagesResponse instantiates a new GetConversationMessagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConversationMessagesResponse(data []SMSConversationMessage) *GetConversationMessagesResponse {
	this := GetConversationMessagesResponse{}
	this.Data = data
	return &this
}

// NewGetConversationMessagesResponseWithDefaults instantiates a new GetConversationMessagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConversationMessagesResponseWithDefaults() *GetConversationMessagesResponse {
	this := GetConversationMessagesResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetConversationMessagesResponse) GetData() []SMSConversationMessage {
	if o == nil {
		var ret []SMSConversationMessage
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetConversationMessagesResponse) GetDataOk() (*[]SMSConversationMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetConversationMessagesResponse) SetData(v []SMSConversationMessage) {
	o.Data = v
}

func (o GetConversationMessagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetConversationMessagesResponse struct {
	value *GetConversationMessagesResponse
	isSet bool
}

func (v NullableGetConversationMessagesResponse) Get() *GetConversationMessagesResponse {
	return v.value
}

func (v *NullableGetConversationMessagesResponse) Set(val *GetConversationMessagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConversationMessagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConversationMessagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConversationMessagesResponse(val *GetConversationMessagesResponse) *NullableGetConversationMessagesResponse {
	return &NullableGetConversationMessagesResponse{value: val, isSet: true}
}

func (v NullableGetConversationMessagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConversationMessagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


