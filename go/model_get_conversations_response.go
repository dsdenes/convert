/*
 * Converted from api.yaml with typeconv
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetConversationsResponse struct for GetConversationsResponse
type GetConversationsResponse struct {
	Data []SMSConversation `json:"data"`
}

// NewGetConversationsResponse instantiates a new GetConversationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConversationsResponse(data []SMSConversation) *GetConversationsResponse {
	this := GetConversationsResponse{}
	this.Data = data
	return &this
}

// NewGetConversationsResponseWithDefaults instantiates a new GetConversationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConversationsResponseWithDefaults() *GetConversationsResponse {
	this := GetConversationsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetConversationsResponse) GetData() []SMSConversation {
	if o == nil {
		var ret []SMSConversation
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetConversationsResponse) GetDataOk() (*[]SMSConversation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetConversationsResponse) SetData(v []SMSConversation) {
	o.Data = v
}

func (o GetConversationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetConversationsResponse struct {
	value *GetConversationsResponse
	isSet bool
}

func (v NullableGetConversationsResponse) Get() *GetConversationsResponse {
	return v.value
}

func (v *NullableGetConversationsResponse) Set(val *GetConversationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConversationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConversationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConversationsResponse(val *GetConversationsResponse) *NullableGetConversationsResponse {
	return &NullableGetConversationsResponse{value: val, isSet: true}
}

func (v NullableGetConversationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConversationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


